# Built-In Importsfrom typing import List# FastAPI Importsfrom fastapi import APIRouter, Dependsfrom fastapi.responses import JSONResponse# SQLAlchemy Importsfrom sqlalchemy.orm import Session# Libsfrom pydantic import BaseModel# Modulesfrom app.db.db import get_dbfrom app.db.model.Shelves import Shelves# Utilsfrom app.utils.responses import responses, generate_response# Define routerrouter = APIRouter()class ShelfDeleteBody(BaseModel):    shelf_ids: List[int]@router.delete("/update")async def shelf_update_delete(body: ShelfDeleteBody, db: Session = Depends(get_db)):    """    Deletes a shelf(ves) data in a database table.    Queries: None    Body: int[]    Returns:        JSONResponse: Returns Operation Details.    """    try:        shelves_db = Shelves()  # Get instance of Shelves table        result = shelves_db.delete(params=body, db=db)  # Delete by provided params        return generate_response(**result)  # Return Operation Details from database response.    except Exception as e:        print("Exception: ", e)        return JSONResponse(status_code=500, content=responses[500])